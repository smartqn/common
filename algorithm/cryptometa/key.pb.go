// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cryptometa/key.proto

package cryptometa

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type License struct {
	LicenseID            string   `protobuf:"bytes,1,opt,name=LicenseID,proto3" json:"LicenseID,omitempty"`
	SecondsLimit         int64    `protobuf:"varint,2,opt,name=SecondsLimit,proto3" json:"SecondsLimit,omitempty"`
	SecondsUsed          int64    `protobuf:"varint,3,opt,name=SecondsUsed,proto3" json:"SecondsUsed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *License) Reset()         { *m = License{} }
func (m *License) String() string { return proto.CompactTextString(m) }
func (*License) ProtoMessage()    {}
func (*License) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1c0e444f2d613c8, []int{0}
}

func (m *License) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_License.Unmarshal(m, b)
}
func (m *License) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_License.Marshal(b, m, deterministic)
}
func (m *License) XXX_Merge(src proto.Message) {
	xxx_messageInfo_License.Merge(m, src)
}
func (m *License) XXX_Size() int {
	return xxx_messageInfo_License.Size(m)
}
func (m *License) XXX_DiscardUnknown() {
	xxx_messageInfo_License.DiscardUnknown(m)
}

var xxx_messageInfo_License proto.InternalMessageInfo

func (m *License) GetLicenseID() string {
	if m != nil {
		return m.LicenseID
	}
	return ""
}

func (m *License) GetSecondsLimit() int64 {
	if m != nil {
		return m.SecondsLimit
	}
	return 0
}

func (m *License) GetSecondsUsed() int64 {
	if m != nil {
		return m.SecondsUsed
	}
	return 0
}

func init() {
	proto.RegisterType((*License)(nil), "cryptometa.License")
}

func init() { proto.RegisterFile("cryptometa/key.proto", fileDescriptor_e1c0e444f2d613c8) }

var fileDescriptor_e1c0e444f2d613c8 = []byte{
	// 124 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x49, 0x2e, 0xaa, 0x2c,
	0x28, 0xc9, 0xcf, 0x4d, 0x2d, 0x49, 0xd4, 0xcf, 0x4e, 0xad, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0xe2, 0x42, 0x88, 0x2a, 0xe5, 0x72, 0xb1, 0xfb, 0x64, 0x26, 0xa7, 0xe6, 0x15, 0xa7, 0x0a,
	0xc9, 0x70, 0x71, 0x42, 0x99, 0x9e, 0x2e, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x08, 0x01,
	0x21, 0x25, 0x2e, 0x9e, 0xe0, 0xd4, 0xe4, 0xfc, 0xbc, 0x94, 0x62, 0x9f, 0xcc, 0xdc, 0xcc, 0x12,
	0x09, 0x26, 0x05, 0x46, 0x0d, 0xe6, 0x20, 0x14, 0x31, 0x21, 0x05, 0x2e, 0x6e, 0x28, 0x3f, 0xb4,
	0x38, 0x35, 0x45, 0x82, 0x19, 0xac, 0x04, 0x59, 0x28, 0x89, 0x0d, 0xec, 0x02, 0x63, 0x40, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x17, 0x87, 0x0a, 0x85, 0x99, 0x00, 0x00, 0x00,
}
